{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","navModeClass","to","title","style","position","top","left","type","id","about","href","target","rel","src","right","onClick","handleToggleMode","mode","htmlFor","TextForm","useState","text","setText","copyClick","event","myText","document","getElementById","select","navigator","clipboard","writeText","value","setNewAlert","clearClick","color","heading","backgroundColor","onChange","rows","newText","toUpperCase","toLowerCase","split","join","length","Alert","height","alert","role","alertType","word","charAt","slice","capitalizeFirstLetter","msg","About","alt","textDecoration","defaultProps","App","navLightClass","setMode","setNavModeClass","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2OAKe,SAASA,EAAOC,GAE7B,OACE,mCACE,sBAAKC,UAAW,2BAA6BD,EAAME,aAAnD,UACE,cAAC,IAAD,CAAMD,UAAU,eAAeE,GAAG,IAAlC,SAAuCH,EAAMI,QAC7C,sBAAKH,UAAU,kBAAf,UAEE,wBAAQI,MAAO,CAAEC,SAAU,IAAKC,IAAK,OAAQC,KAAM,QAAUP,UAAU,iBAAiBQ,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAjP,SACE,sBAAMR,UAAU,0BAGlB,qBAAKA,UAAU,2BAA2BS,GAAG,yBAA7C,SACE,qBAAIT,UAAU,uCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOE,GAAG,IAAzD,oBAEF,oBAAIF,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,SAA9B,SAAwCH,EAAMW,UAEhD,oBAAIV,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWW,KAAK,+BAA+BC,OAAO,SAASC,IAAI,aAAhF,SAA6F,cAAC,IAAD,CAAUC,IAAI,mBAE7G,oBAAId,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAWW,KAAK,wDAAwDC,OAAO,SAASC,IAAI,aAAzG,SAAsH,cAAC,IAAD,CAAUC,IAAI,6BAK5I,sBAAKd,UAAU,yBAAyBI,MAAO,CAAEC,SAAU,WAAYC,IAAK,OAAQS,MAAO,QAA3F,UACE,uBAAOf,UAAU,wBAAwBQ,KAAK,WAAWC,GAAG,yBAAyBO,QAASjB,EAAMkB,mBACpG,wBAAOjB,UAAW,yBAAyBD,EAAMmB,KAAMC,QAAQ,yBAA/D,oBAAgGpB,EAAMmB,KAAtG,mBChCK,SAASE,EAASrB,GAC7B,MAAwBsB,mBAAS,6CAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAqBMC,EAAY,SAACC,GACf,IAAIC,EAASC,SAASC,eAAe,cACrCF,EAAOG,SACPC,UAAUC,UAAUC,UAAUN,EAAOO,OACrClC,EAAMmC,YAAY,UAAU,oBAiB1BC,EAAa,SAACV,GAChBF,EAAQ,IACRxB,EAAMmC,YAAY,UAAU,kBAEhC,OACA,sBAAKlC,UAAU,OAAOI,MAAO,CAACgC,MAAmB,SAAbrC,EAAMmB,KAAc,QAAQ,SAAhE,UACI,sBAAKlB,UAAU,iBAAf,UACI,6BAAKD,EAAMsC,UACX,qBAAKrC,UAAU,OAAf,SACI,0BAAUA,UAAU,+CAA+CS,GAAG,aACtEL,MAAO,CAACkC,gBAA6B,SAAbvC,EAAMmB,KAAc,QAAQ,UAAWkB,MAAmB,SAAbrC,EAAMmB,KAAc,QAAQ,SACjGe,MAAOX,EAAMiB,SAnDF,SAACd,GAEpBF,EAAQE,EAAMb,OAAOqB,QAiD0BO,KAAK,SAEhD,sBAAKxC,UAAU,wDAAf,UACI,wBAAQA,UAAU,oCAAoCgB,QAjD3C,WAEnB,IAAIyB,EAAUnB,EAAKoB,cACnBnB,EAAQkB,GACR1C,EAAMmC,YAAY,UAAU,6BA6CpB,uCACA,wBAAQlC,UAAU,oCAAoCgB,QA3C3C,WAEnB,IAAIyB,EAAUnB,EAAKqB,cACnBpB,EAAQkB,GACR1C,EAAMmC,YAAY,UAAU,6BAuCpB,uCACA,wBAAQlC,UAAU,oCAAoCgB,QA9BtC,SAACS,GACzB,IAAIgB,EAAUnB,EAAKsB,MAAM,QACzBrB,EAAQkB,EAAQI,KAAK,MACrB9C,EAAMmC,YAAY,UAAU,0BA2BpB,iCACA,wBAAQlC,UAAU,oCAAoCgB,QA1BjD,SAACS,GAIdD,IACAW,IACApC,EAAMmC,YAAY,UAAU,iBAoBpB,iBACA,wBAAQlC,UAAU,oCAAoCgB,QAASQ,EAA/D,kBACA,wBAAQxB,UAAU,oCAAoCgB,QAASmB,EAA/D,yBAGR,sBAAKnC,UAAU,4CAAf,UACI,qDADJ,UAEYsB,EAAKwB,OAAO,EAA2B,MAAtBxB,EAAKA,EAAKwB,OAAO,GAASxB,EAAKsB,MAAM,KAAKE,OAAOxB,EAAKsB,MAAM,KAAKE,OAAO,EAAK,EAF1G,IAE6G,uBAF7G,eAGiBxB,EAAKwB,OAClB,0CACCxB,EAAKwB,OAAO,EAAExB,EAAK,mCCxEjB,SAASyB,EAAMhD,GAK1B,OACE,qBAAKK,MAAO,CAAC4C,OAAO,QAApB,SACCjD,EAAMkD,OACP,sBAAKjD,UAAW,eAAeD,EAAMkD,MAAMzC,KAAK,+BAAgC0C,KAAK,QAArF,UACE,iCAR0B,SAACC,GAC3B,IAAMC,EAAOD,EAAUR,cACvB,OAAOS,EAAKC,OAAO,GAAGX,cAAgBU,EAAKE,MAAM,GAMxCC,CAAsBxD,EAAMkD,MAAMzC,QAD7C,KAC+DT,EAAMkD,MAAMO,SCTlE,SAASC,EAAM1D,GAC1B,OACI,sBAAKC,UAAW,kBAAkBD,EAAMmB,KAAxC,UACI,oBAAIlB,UAAU,QAAd,mBACA,6CACY,oDADZ,kFAC0H,iCAAQ,oBAAGW,KAAK,sBAAsBP,MAAO,CAACgC,MAAM,WAA5C,UAAwD,qBAAKtB,IAAI,cAAc4C,IAAI,aAAatD,MAAO,CAAC4C,OAAO,UAA/G,aADlI,OAGA,qIAGA,sEACA,+BACI,wFACA,2DACA,0DACA,iDAEJ,2CACA,4BACA,4CAAc,mBAAGrC,KAAK,sFAAsFC,OAAO,SAASC,IAAI,aAAaT,MAAO,CAACgC,MAAM,UAAWuB,eAAe,QAAvK,qDAEd,4BACA,4CAAc,mBAAGhD,KAAK,gDAAgDP,MAAO,CAACgC,MAAM,UAAWuB,eAAe,QAAhG,gDApBlB,sEAsBuE,oBAAGhD,KAAK,uBAAuBC,OAAO,SAASC,IAAI,aAAaT,MAAO,CAACgC,MAAM,WAA9E,cAA2F,oEAtBlK,gFH4CRtC,EAAO8D,aAAe,CACpBzD,MAAO,aACPO,MAAO,SCiCTU,EAASwC,aAAe,CACnBvB,QAAS,W,WGvBCwB,MArDf,WAEM,IACIC,EAAgB,wBACpB,EAAwBzC,mBAAS,QAAjC,mBAAOH,EAAP,KAAa6C,EAAb,KACA,EAAwC1C,mBAASyC,GAAjD,mBAAO7D,EAAP,KAAqB+D,EAArB,KACA,EAA0B3C,mBAAS,MAAnC,mBAAO4B,EAAP,KAAcgB,EAAd,KAEA/B,EAAc,SAAC1B,EAAM0D,GACzBD,EAAS,CACPT,IAAKU,EACL1D,KAAMA,IAER2D,YAAW,WACTF,EAAS,QACR,MAkBH,OACE,8BAIE,eAAC,IAAD,WACE,cAACnE,EAAD,CAAQK,MAAM,qBAAqBF,aAAcA,EAAcgB,iBArB9C,WACL,SAATC,GACC6C,EAAQ,SACRC,EAnBa,uBAoBbrC,SAASyC,KAAKhE,MAAMkC,gBAAiB,UACrCJ,EAAY,UAAU,uBAGtB6B,EAAQ,QACRC,EAAgBF,GAChBnC,SAASyC,KAAKhE,MAAMkC,gBAAiB,QACrCJ,EAAY,UAAU,wBAUyEhB,KAAMA,IACzG,cAAC6B,EAAD,CAAOE,MAAOA,IACd,eAAC,IAAD,WACI,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,SAAlB,SACA,cAACb,EAAD,CAAOvC,KAAMA,MAEb,cAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,QAAlB,SACE,cAAClD,EAAD,CAAUiB,QAAQ,uBAAuBnB,KAAMA,EAAMgB,YAAaA,eC1CjEqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvD,SAASC,eAAe,SAM1B2C,M","file":"static/js/main.461dd377.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { ReactSVG } from \"react-svg\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <>\r\n      <nav className={\"navbar navbar-expand-lg \" + props.navModeClass}>\r\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n        <div className=\"container-fluid\">\r\n          {/* toggle mode */}\r\n          <button style={{ position: \"a\", top: \"1rem\", left: \"1rem\" }} className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"my-2 navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"https://github.com/coder-jkb\" target=\"_blank\" rel=\"noreferrer\"><ReactSVG src=\"github.svg\" /></a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"https://www.linkedin.com/in/jay-bhanushali-03b647200/\" target=\"_blank\" rel=\"noreferrer\"><ReactSVG src=\"linkedin.svg\" /></a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-check form-switch\" style={{ position: \"absolute\", top: \"1rem\", right: \"1rem\" }}>\r\n          <input className=\"mx-3 form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckChecked\" onClick={props.handleToggleMode} />\r\n          <label className={\"form-check-label text-\"+props.mode} htmlFor=\"flexSwitchCheckChecked\">Enable {props.mode} mode</label>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Title here\",\r\n  about: \"About\"\r\n};\r\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"Enter the text and start working on it...\");\r\n\r\n    const handelOnChange = (event)=>{\r\n        // console.log(\"Onchange\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const upperCaseClick = ()=>{\r\n        // console.log(\"Uppercase clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.setNewAlert(\"success\",\"Converted to Upper case!\");\r\n\r\n    };\r\n    const lowerCaseClick = ()=>{\r\n        // console.log(\"lowercase clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.setNewAlert(\"success\",\"Converted to lower case!\");\r\n\r\n    }\r\n    const copyClick = (event) =>{\r\n        let myText = document.getElementById(\"myTextarea\");\r\n        myText.select();\r\n        navigator.clipboard.writeText(myText.value);\r\n        props.setNewAlert(\"success\",\"Text is copied!\");\r\n\r\n    }\r\n    const delExtraSpacesClick = (event) =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.setNewAlert(\"success\",\"Deleted extra spaces!\");\r\n    }\r\n    const cutClick = (event) =>{\r\n        // let myText = document.getElementById(\"myTextarea\");\r\n        // myText.select();\r\n        // navigator.clipboard.writeText(myText.value)\r\n        copyClick();\r\n        clearClick();\r\n        props.setNewAlert(\"success\",\"Text is cut!\");\r\n\r\n    }\r\n    const clearClick = (event) =>{\r\n        setText(\"\")\r\n        props.setNewAlert(\"success\",\"Text cleared!\");\r\n    }\r\n    return (\r\n    <div className=\"pb-3\" style={{color:props.mode===\"dark\"?\"black\":\"white\"}}>\r\n        <div className=\"container my-4\" >\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control border border-primary bg-{mode}\" id=\"myTextarea\" \r\n                style={{backgroundColor:props.mode===\"dark\"?\"white\":\"#2a2b2c\", color:props.mode===\"dark\"?\"black\":\"white\"}} \r\n                value={text} onChange={handelOnChange} rows=\"12\"></textarea>\r\n            </div>\r\n            <div className=\"d-flex flex-md-row flex-column justify-content-center\">\r\n                <button className=\"mx-3 my-3 btn btn-outline-primary\" onClick={upperCaseClick}>Convert all to UPPER CASE</button>\r\n                <button className=\"mx-3 my-3 btn btn-outline-primary\" onClick={lowerCaseClick}>Convert all to lower case</button>\r\n                <button className=\"mx-3 my-3 btn btn-outline-primary\" onClick={delExtraSpacesClick}>Delete extra spaces</button>\r\n                <button className=\"mx-3 my-3 btn btn-outline-primary\" onClick={cutClick}>Cut</button>\r\n                <button className=\"mx-3 my-3 btn btn-outline-primary\" onClick={copyClick}>Copy</button>\r\n                <button className=\"mx-3 my-3 btn btn-outline-primary\" onClick={clearClick}>Clear</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container border border-primary bg-{mode}\">\r\n            <h2>Your Text analysis:</h2>\r\n            Words: {text.length>0 ? (text[text.length-1]!==\" \"?text.split(\" \").length:text.split(\" \").length-1) : 0} <br />\r\n            Characters: {text.length} \r\n            <h3>Preview:</h3>\r\n            {text.length>0?text:\"Enter some text to preview\"}\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nTextForm.propTypes = {\r\n    heading: PropTypes.string.isRequired\r\n};\r\nTextForm.defaultProps = {\r\n     heading: \"Heading\"\r\n};","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalizeFirstLetter = (alertType) =>{\r\n        const word = alertType.toLowerCase();\r\n        return word.charAt(0).toUpperCase() + word.slice(1); \r\n    }\r\n    return (\r\n      <div style={{height:\"50px\"}}>\r\n      {props.alert && \r\n      <div className={\"alert alert-\"+props.alert.type+\" alert-dismissible fade show\"} role=\"alert\">\r\n        <strong>{capitalizeFirstLetter(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div className={\"container text-\"+props.mode} >\r\n            <h1 className=\"about\">About</h1>\r\n            <p>\r\n            &rarr; I am <strong>Jay Bhanushali</strong> I have built this simple text utility application as a project while learning <strong><a href=\"https://reactjs.org\" style={{color:\"#35c7ff\"}}><img src=\"logo192.png\" alt=\"React_logo\" style={{height:\"30px\"}} />React</a></strong>.\r\n            </p>\r\n            <p>\r\n            &rarr; As the main focus was te learn React, I have used Bootstrap for basic layought and styling...\r\n            </p>\r\n            <h3>What did I learn from this Project ?</h3>\r\n            <ul>\r\n                <li>Getting started with React - Creating simple react app</li>\r\n                <li>Function based components</li>\r\n                <li>Learn props and useState</li>\r\n                <li>React router</li>\r\n            </ul>\r\n            <h3>Resources</h3>\r\n            <p>\r\n            <strong>&rarr;<a href=\"https://www.youtube.com/watch?v=-mJFZp84TIY&list=PLu0W_9lII9agx66oZnT6IyhcMIbUMNMdt\" target=\"_blank\" rel=\"noreferrer\" style={{color:\"#ff7c7c\", textDecoration:\"none\"}}> Youtube tutorial by CodeWithHarry</a></strong>\r\n            </p>\r\n            <p>\r\n            <strong>&rarr;<a href=\"https://reactjs.org/docs/getting-started.html\" style={{color:\"#35c7ff\", textDecoration:\"none\"}}> React official documentation</a></strong>\r\n            </p>\r\n            You can have a look at the source code by visiting this GitHub repo<a href=\"https://git.io/Jutb8\" target=\"_blank\" rel=\"noreferrer\" style={{color:\"#00d500\"}}> <strong>Simple-Text-Editor-in-React</strong></a> & any suggestion or feedback related to the project is heartily welcomed.\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport {useState} from 'react'\nimport Alert from './components/Alert';\nimport About from './components/About';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n      // toggle mode variables\n      var navDarkClass = \"navbar-dark bg-dark\";\n      var navLightClass = \"navbar-light bg-light\";\n      const [mode, setMode] = useState(\"dark\");\n      const [navModeClass, setNavModeClass] = useState(navLightClass);\n      const [alert, setAlert] = useState(null);\n\nconst setNewAlert = (type, message) => {\n  setAlert({\n    msg: message,\n    type: type\n  })\n  setTimeout(() => {\n    setAlert(null);\n  }, 4000);\n};\n\nconst handleToggleMode = () => {\n        if(mode === \"dark\"){\n            setMode(\"light\")\n            setNavModeClass(navDarkClass);\n            document.body.style.backgroundColor= \"#112426\";\n            setNewAlert(\"success\",\"Enabled dark mode\");\n        }\n        else{\n            setMode(\"dark\")\n            setNavModeClass(navLightClass);\n            document.body.style.backgroundColor= \"white\"\n            setNewAlert(\"success\",\"Enabled light mode\");\n        }\n    };\n  \n  return (\n    <div>\n      {/* Toggle switch  source :\n        https://getbootstrap.com/docs/5.0/forms/checks-radios/#switches\n        */}\n      <Router>\n        <Navbar title=\"!My 1st react app!\" navModeClass={navModeClass} handleToggleMode={handleToggleMode} mode={mode} />\n        <Alert alert={alert} /> \n        <Switch>\n            <Route exact path=\"/about\">\n            <About mode={mode}/>\n            </Route>\n            <Route exact path=\"/home\">\n              <TextForm heading=\"Let's play with text\" mode={mode} setNewAlert={setNewAlert} />\n            </Route>\n          </Switch>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}